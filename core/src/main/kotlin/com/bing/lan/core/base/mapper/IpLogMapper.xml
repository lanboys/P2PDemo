<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bing.lan.core.base.mapper.IpLogMapper">
    <resultMap id="BaseResultMap" type="com.bing.lan.core.base.domain.IpLog">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="ip" property="ip" jdbcType="VARCHAR"/>
        <result column="loginState" property="loginState" jdbcType="TINYINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="loginInfoId" property="loginInfoId" jdbcType="BIGINT"/>
        <result column="loginType" property="loginType" jdbcType="TINYINT"/>
        <result column="loginTime" property="loginTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM iplog
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.bing.lan.core.base.domain.IpLog" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO iplog (ip, loginState, username,
                           loginInfoId, loginType, loginTime)
        VALUES
            (#{ip,jdbcType=VARCHAR}, #{loginState,jdbcType=TINYINT}, #{username,jdbcType=VARCHAR},
             #{loginInfoId,jdbcType=BIGINT}, #{loginType,jdbcType=TINYINT},
             #{loginTime,jdbcType=TIMESTAMP})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.bing.lan.core.base.domain.IpLog">
        UPDATE iplog
        SET ip          = #{ip,jdbcType=VARCHAR},
            loginState  = #{loginState,jdbcType=TINYINT},
            username    = #{username,jdbcType=VARCHAR},
            loginInfoId = #{loginInfoId,jdbcType=BIGINT},
            loginType   = #{loginType,jdbcType=TINYINT},
            loginTime   = #{loginTime,jdbcType=TIMESTAMP}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <sql id="base_column">
        id, ip, loginState, username, loginInfoId, loginType, loginTime
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="base_column"/>
        from iplog
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="base_column"/>
        from iplog
    </select>

    <sql id="base_query">
        <where>
            <if test="beginDate!=null">
                AND loginTime &gt;=#{beginDate}
            </if>
            <if test="endDate!=null">
                AND loginTime &lt;=#{endDate}
            </if>
            <if test="username!=null and like">
                AND username like concat('%',#{username},'%')
            </if>
            <if test="username!=null and !like">
                AND username =#{username}
            </if>
            <if test="userType>-1">
                AND loginType =#{userType}
            </if>
            <if test="state >-1">
                AND loginstate = #{state}
            </if>
        </where>
    </sql>
    <select id="queryForCount" resultType="int">
        select count(id) from iplog
        <include refid="base_query"/>
    </select>

    <select id="query" resultMap="BaseResultMap">
        select
        <include refid="base_column"/>
        from iplog
        <include refid="base_query"/>
        order by loginTime desc
        <if test="pageSize >-1">
            LIMIT #{start},#{pageSize}
        </if>
    </select>
</mapper>