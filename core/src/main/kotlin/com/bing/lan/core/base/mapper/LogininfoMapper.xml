<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bing.lan.core.base.mapper.LogininfoMapper">
    <resultMap id="BaseResultMap" type="com.bing.lan.core.base.domain.Logininfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="TINYINT"/>
        <result column="admin" property="admin" jdbcType="BIT"/>
        <result column="usertype" property="userType" jdbcType="TINYINT"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM logininfo
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.bing.lan.core.base.domain.Logininfo"
            useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO logininfo (username, password, state, usertype, admin
        )
        VALUES
            (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT},
             #{userType}, #{admin}
            )
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.bing.lan.core.base.domain.Logininfo">
        UPDATE logininfo
        SET username = #{username,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            state    = #{state,jdbcType=TINYINT},
            usertype = #{userType},
            admin    = #{admin}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
            id,
            username,
            password,
            state,
            usertype,
            admin
        FROM logininfo
        WHERE id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
            id,
            username,
            password,
            state,
            usertype,
            admin
        FROM logininfo
    </select>

    <select id="getCountByUsername" resultType="Integer">
        SELECT count(id)
        FROM logininfo
        WHERE username = #{username} AND usertype = #{userType}
    </select>

    <select id="login" resultMap="BaseResultMap">
        SELECT *
        FROM logininfo
        WHERE username = #{username} AND password = #{password} AND usertype = #{userType}
    </select>

</mapper>